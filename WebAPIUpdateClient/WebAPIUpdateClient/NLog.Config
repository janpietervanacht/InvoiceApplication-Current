<?xml version="1.0" encoding="utf-8" ?>
<!-- De volgende sectie is de logging van NLog zelf (internal logging) -->

<!-- Logging naar alle 3 varianten -->
<!-- 1. Naar database table
     2. Naar text file
	 3. Naar Windows Event Viewer 
-->

<!--  
Voor Nlog(): installeer de volgende 4 NuGetPackages:
		Nlog.Appsettings.Standard
		Nlog.Web.AspNetCore
		System.Data.SqlClient  NIET VERGETEN
		Nlog.WindowsEventLog NIET VERGETEN bij logging naar Windows Event Viewer

ATTENTIE: Als de logging niet werkt (programma doet het, geen exception
maar geen log entries weggeschreven)
Kijk dan in de interne-logging van NLog zie internalLogFile hieronder
--> 

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog-WebAPIForClient.txt">
	<!-- HIERIN KIJKEN ALS LOGGING NIET WERKT-->
	<!-- ________________________________________________________  -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		
		<!-- windows event log: -->
		<add assembly="Nlog.WindowsEventLog" />
		<!-- windows event log -->

	</extensions>

	<targets>
		<!-- target 1: log naar database table in database 'Logging'_________________________ -->
		
		<!-- Haal de Logging database op uit appsettings.json -->
		<target name="logApiBoodschappen" xsi:type="Database"
	 connectionString="${appsettings:name=ConnectionStrings.LoggingConnection}">
			<!--  ____________________________________ -->

			<commandText>
				insert into dbo.LogApiMessages (
				Application, Logged, Level, Message,
				Logger, CallSite, Exception
				) values (
				@Application, @Logged, @Level, @Message,
				@Logger, @Callsite, @Exception
				);
			</commandText>
			<parameter name="@application" layout="WebApiForClient" />
			<parameter name="@logged" layout="${date}" />
			<parameter name="@level" layout="${level}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@callSite" layout="${callsite:filename=true}" />
			<parameter name="@exception" layout="${exception:tostring}" />
		</target>

		<!-- target 2: log naar text file_________________________ -->
		<target name="txtFileLog" xsi:type="File"
							fileName="${appsettings:name=LoggingLocations.LoggingTxtFile}">
		</target>

		<!-- target 3: log naar windows event viewer _________________________ -->

		<!-- 1. Power Shell opstarten vanuit windows start button -->
		<!-- of vanuit vergrootglas linksonder  -->
		<!-- rechter muis: run Powershell as administrator -->

		<!-- 2. Creëer een EventLog met source=WebAPIForClient op in Windows PowerShell: tik in:    -->
		<!-- C:\...\....>   New-EventLog -LogName Application -Source WebAPIForClient           -->

		<!-- 3. Draai je applicatie, nu wordt er gelogd naar Windows Event Viewer -->
		<!-- 4. Start Event Viewer en bekijk de resultaten  -->
		<!-- 4a. Kijk in de explorer aan de linkerkant van Event Viewer:  Windows Logs -> Application doe hier een REFRESH -->
		<!-- 4b. Sorteer de Date en Time in descending volgorde, om zo de meest recente log entries te zien -->
		
		<target xsi:type="EventLog"
					   name="eventLogging"
					   eventid="1000"
					   source="WebAPIForClient"
					   layout="${message}${newline}${exception:format=ToString}" Log="Application" machinename=".">
		</target>

	</targets>

	<rules>
		<logger name="*" minlevel ="Debug" writeTo="logApiBoodschappen" />
		<logger name="*" minlevel ="Debug" writeTo="txtFileLog" />
		<logger name="*" minlevel ="Debug" writeTo="eventLogging" />
	</rules>
</nlog>
